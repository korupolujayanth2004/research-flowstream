name: Deploy Research Flowstream Backend to Hugging Face Spaces

on:
  push:
    branches: [main]
    paths:
      - 'backend/**'
      - '.github/workflows/deploy-backend.yml'
  workflow_dispatch:

jobs:
  deploy-backend:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Prepare Space payload for deployment
        run: |
          # Create a clean directory for the Space content
          rm -rf space_backend && mkdir -p space_backend
          
          # --- THE FIRST CRITICAL FIX ---
          # Copy the 'backend' directory itself into the 'space_backend' folder.
          # This creates 'space_backend/backend/', which is the correct structure
          # for the Docker build context.
          cp -r backend/ space_backend/

      - name: Create Multi-Stage Dockerfile for Hugging Face Space
        run: |
          # This command writes the final, correct multi-stage Dockerfile.
          cat > space_backend/Dockerfile << 'EOF'
          # === STAGE 1: The Builder (Downloads the model) ===
          FROM python:3.10-slim as builder
          RUN pip install --no-cache-dir sentence-transformers
          ENV MODEL_NAME=sentence-transformers/all-MiniLM-L6-v2
          ENV SAVE_PATH=/opt/models/all-MiniLM-L6-v2
          RUN python -c "import os; from sentence_transformers import SentenceTransformer; SentenceTransformer(os.getenv('MODEL_NAME')).save(os.getenv('SAVE_PATH'))"

          # === STAGE 2: The Final Application Image ===
          FROM python:3.10-slim
          WORKDIR /app
          ENV PORT=7860

          # --- THE SECOND CRITICAL FIX ---
          # Add the working directory to Python's import path.
          # This tells Python to look for modules starting from /app.
          # When your code runs `from backend...`, Python will find `/app/backend`.
          ENV PYTHONPATH=/app

          # Copy just the requirements from the build context to optimize Docker layers
          COPY backend/requirements.txt .
          RUN pip install --no-cache-dir -r requirements.txt

          # Copy your application code into the container.
          # This will create the /app/backend/ structure.
          COPY backend/ .

          # Copy the pre-downloaded model from the builder stage
          COPY --from=builder /opt/models/all-MiniLM-L6-v2 ./models/all-MiniLM-L6-v2

          # This command will now work because of the PYTHONPATH setting.
          CMD ["uvicorn", "backend.main:app", "--host", "0.0.0.0", "--port", "7860"]
          EOF

      - name: Create README.md for Hugging Face Space
        run: |
          cat > space_backend/README.md << 'EOF'
          ---
          title: Research Flowstream (Backend)
          sdk: docker
          ---
          EOF

      - name: Push to Hugging Face Space
        env:
          HF_TOKEN: ${{ secrets.HF_TOKEN }}
        run: |
          cd space_backend
          git init
          git lfs install
          git branch -M main
          git remote add origin https://Jayanthk2004:${HF_TOKEN}@huggingface.co/spaces/Jayanthk2004/Research-Flowstream
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add .
          git commit -m "Deploy backend with corrected PYTHONPATH and file structure"
          git push -u origin main --force
